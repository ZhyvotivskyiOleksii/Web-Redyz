
-- Create chats table
CREATE TABLE IF NOT EXISTS public.chats (
    id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
    created_at timestamp with time zone DEFAULT now() NOT NULL
);
ALTER TABLE public.chats ENABLE ROW LEVEL SECURITY;

-- Create messages table
CREATE TABLE IF NOT EXISTS public.messages (
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    chat_id uuid REFERENCES public.chats(id) ON DELETE CASCADE NOT NULL,
    role text NOT NULL,
    content text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);
ALTER TABLE public.messages ENABLE ROW LEVEL SECURITY;

-- Create chat-uploads bucket
-- Note: This is an illustrative comment. Bucket creation is best done via Supabase UI or management API.
-- The RLS policies below assume the bucket 'chat-uploads' exists and is public.
-- insert into storage.buckets (id, name, public) values ('chat-uploads', 'chat-uploads', true)
--   on conflict (id) do nothing;

-- RLS Policies for chats table
DROP POLICY IF EXISTS "Allow anonymous insert" ON public.chats;
CREATE POLICY "Allow anonymous insert" ON public.chats
  FOR INSERT TO anon
  WITH CHECK (true);

-- RLS Policies for messages table
DROP POLICY IF EXISTS "Allow anonymous insert" ON public.messages;
CREATE POLICY "Allow anonymous insert" ON public.messages
  FOR INSERT TO anon
  WITH CHECK (true);

DROP POLICY IF EXISTS "Allow anonymous select" ON public.messages;
CREATE POLICY "Allow anonymous select" ON public.messages
  FOR SELECT TO anon
  USING (true);

-- RLS Policies for storage (chat-uploads bucket)
DROP POLICY IF EXISTS "Allow anonymous read access" ON storage.objects;
CREATE POLICY "Allow anonymous read access" ON storage.objects
  FOR SELECT TO anon
  USING (bucket_id = 'chat-uploads');

DROP POLICY IF EXISTS "Allow anonymous upload" ON storage.objects;
CREATE POLICY "Allow anonymous upload" ON storage.objects
  FOR INSERT TO anon
  WITH CHECK (bucket_id = 'chat-uploads');

    